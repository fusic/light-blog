<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LIGHT BLOG</title>
  
  <subtitle>チームLIGHTの雑記ブログ</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://light.fusic.co.jp/"/>
  <updated>2020-09-29T05:57:20.708Z</updated>
  <id>https://light.fusic.co.jp/</id>
  
  <author>
    <name>light</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DEXA2020に参加しました</title>
    <link href="https://light.fusic.co.jp/2020/09/29/20200918-sakai/"/>
    <id>https://light.fusic.co.jp/2020/09/29/20200918-sakai/</id>
    <published>2020-09-29T06:06:52.000Z</published>
    <updated>2020-09-29T05:57:20.708Z</updated>
    
    <content type="html"><![CDATA[<p>はじめまして、新卒の坂井です。まだまだ何かと騒がしい世の中ですが、ご多分に漏れず坂井も遂にその煽りを食らいましたという話をします（リモートワークはカウントに入りません、引きこもりなので）。タイトルだけだと真面目めいていますが、<strong>「今このご時世の覚書、そしてワーケーションについて」</strong>みたいな内容ですので、まったくそんなものではありません。</p><h2 id="DEXA2020-のあらまし"><a href="#DEXA2020-のあらまし" class="headerlink" title="DEXA2020 のあらまし"></a>DEXA2020 のあらまし</h2><p><a href="http://www.dexa.org/dexa2020" target="_blank" rel="noopener">DEXA</a> というデータベース系の論文なら割となんでもオッケーな conference がありまして、坂井は修士論文を指定のフォーマットに詰め込んだものを short paper 枠で採択していただいていました。2020 年はスロヴァキアのブラチスラヴァでの開催だったので、修論執筆時から「学生生活最後の思い出としてブラチスラヴァかぁ、なかなかどうして悪くない」と皮算用をしておりました。修論自体の締切は 2 月頭だったので、件のアレについては、まだ、まだ世の中平和、とは既に言い切れませんでしたが。いえ、割と「これはひょっとしなくてもヤバイやつ」とは思っていましたが、とはいえ、考えると修論執筆作業がつらくなるので、とりあえず考えないことにしていました。</p><p>かくして確か 8 月頭、採択通知から 2 ヶ月過ぎ、開催当日まであと 1 ヶ月半といったころに「virtual 開催にします」と運営からアナウンスがありました。よくぞ粘ったものだと思いました。</p><h2 id="そうだ、大分行こう"><a href="#そうだ、大分行こう" class="headerlink" title="そうだ、大分行こう"></a>そうだ、大分行こう</h2><p>DEXA2020 は 4 日間日程でして、「何か特別なことをしないと絶対に途中でダレるな」ということは割と心配していました。Zoom でマイクオフ・カメラオフにしてプレゼンテーションを聴く、というのが基本線なので、ぼーっと動画を流し見て 4 日間が終わってしまうということもメチャクチャありえます（もちろん発表もするんですけれど）。</p><p>ところで最近、様々な施策があってお宿が大変安いです。</p><p>これは、<strong>意味もなく他所の土地で連泊して、他所の土地の空気を吸いまくるチャンスなのではなかろうか</strong>、と考えました。</p><p>坂井はお出かけが好きです。とりわけ、他所の土地の人間がどのように生活しているかというのをぼーっと眺めるのが大好きです。ふらっとどこかに出かけて、知らない街でも知ってる街でも街じゃなくても 2 万歩 3 万歩とただただ歩きまくって満足するタイプです。そういう趣味の人間が、普通に旅行をするときではちょっと難しい、3 泊 4 日の機会を手に入れてしまった。いや、前泊後泊もブチ込んでしまえ、そうすれば 5 泊 6 日だ。やるしかない。だってそもそも、ブラチスラヴァに行くはずだったんだから。</p><p>そうして大分駅からほど近い、普段はちょっと泊まろうとは思わないイイ価格帯のビジネスホテルを 5 連泊分、予約したのでした。</p><h2 id="ビジホで生活するということ"><a href="#ビジホで生活するということ" class="headerlink" title="ビジホで生活するということ"></a>ビジホで生活するということ</h2><p>DEXA2020 の内容については <a href="http://www.dexa.org/free_proceedings" target="_blank" rel="noopener">Springer から Proceedings が無料公開されていますので</a>、興味のある方はどうぞ。個人的には DEXA とパラレルでやっていた EGOVIS (Electronic Government and the Information Systems Perspective) のセッションが GIS めいたテーマのものも多く、楽しかったです（坂井の研究テーマは公共交通でした）。</p><h3 id="清掃なしプランで部屋に城を築く"><a href="#清掃なしプランで部屋に城を築く" class="headerlink" title="清掃なしプランで部屋に城を築く"></a>清掃なしプランで部屋に城を築く</h3><p>British Summer Time (UTC+1, 日本時間より 8 時間遅れ) でスケジューリングされていたので、昼に起きて夕方からセッション参加して夜ふかしして寝る、という風情でした。当然ホテルが考える一般的な旅行者、ないし出張者の生活リズムとはかなりズレています。”Do not disturb” を毎日貼り続けるのも面倒なので、今回は清掃なしプランで宿泊しました。清掃の方も入ってこないとなると机の上にお店広げ放題でもあるので、ホテルを寝床以上に使い倒す場合にはとても便利でした。もっとも 5 連泊ともなるとまったく清掃しないわけにもいかないとのことで、今回利用したホテルでは 3 泊目に清掃が入りました。清掃なし割引にもかかわらず、ありがたいことです……すみません……清掃なしプランで「ホテルに住んでしまう」のは時差の問題がなくとも大いにアリだと思います。</p><h3 id="喋る機会があるなら防音も"><a href="#喋る機会があるなら防音も" class="headerlink" title="喋る機会があるなら防音も"></a>喋る機会があるなら防音も</h3><p>特に今回は深夜帯までアレコレやることになるので、ホテル選びにあたってレビューなどでかなり調べました。まあホテルに赴いたあと、どうもダメっぽいようだったら自分の発表枠のときだけネカフェの個室に逃げてもいいかな、とは思っていました。結果的には問題なかったのでよかったです。いいホテルはすごいですね。</p><h2 id="肝心の気合は入ったのか"><a href="#肝心の気合は入ったのか" class="headerlink" title="肝心の気合は入ったのか"></a>肝心の気合は入ったのか</h2><p>入りました。出かけた先でおいしいごはんを食べるだけで気分変わります。</p><p>大分市というチョイスも個人的によかったです。好きでものすごい回数行ってるところなので、お出かけだからと浮かれすぎることもなく、ほどよいぐあいの浮かれポンチでいられました。お祭り感は大事ですが、「せっかく来たのにそこらを見て回るのに全力投球できない」とかなしくなるのはかなしいですもんね。買い物やごはんで行き先にそんなに迷わないぐらい、という場所がちょうどいいかもしれません。</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p><strong>ホテル連泊芸は楽しい！</strong></p><p>ちなみに後泊のあとは普通に出勤日だったのですが、大分からリモートでお仕事しました。こんな暴挙が罷り通って、本当にありがたいことです。</p><p>お粗末さまでした。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;はじめまして、新卒の坂井です。まだまだ何かと騒がしい世の中ですが、ご多分に漏れず坂井も遂にその煽りを食らいましたという話をします（リモートワークはカウントに入りません、引きこもりなので）。タイトルだけだと真面目めいていますが、&lt;strong&gt;「今このご時世の覚書、そしてワー
      
    
    </summary>
    
    
      <category term="Sakai" scheme="https://light.fusic.co.jp/categories/Sakai/"/>
    
    
      <category term="イベントレポート" scheme="https://light.fusic.co.jp/tags/%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%83%AC%E3%83%9D%E3%83%BC%E3%83%88/"/>
    
  </entry>
  
  <entry>
    <title>0円シェアハウスに入居してみた</title>
    <link href="https://light.fusic.co.jp/2020/08/28/20200828-yoshino/"/>
    <id>https://light.fusic.co.jp/2020/08/28/20200828-yoshino/</id>
    <published>2020-08-28T09:30:00.000Z</published>
    <updated>2020-09-29T06:07:26.743Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、吉野です。</p><p>2020年7月からシェアハウスに入居しました。</p><p>なんと家賃0円の0円シェアハウス。</p><p>その全貌をご紹介します！</p><br><h2 id="目次"><a href="#目次" class="headerlink" title="目次"></a>目次</h2><ul><li>0円シェアハウスの概要</li><li>なんで0円なの？</li><li>どんな住民が住んでるの？</li><li>シェアハウスに入居するには？</li><li>終わりに</li></ul><br>## 0円シェアハウスの概要<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">住民数: 8人ほど？(2020年9月時点)</span><br><span class="line">住所: 福岡市中央区大手門1丁目3-22</span><br><span class="line">最寄駅: 大濠公園駅</span><br><span class="line">HP: [https:&#x2F;&#x2F;stand-by-me.jp&#x2F;](https:&#x2F;&#x2F;stand-by-me.jp&#x2F;)</span><br></pre></td></tr></table></figure><p>1階が「STAND BY ME」という立ち飲み屋さん<br>2階、3階がシェアハウスとなっています。</p><p>写真で見せた方が早いので、貼っておきます。</p><p>1階の立ち飲み屋さん<br><img src="/images/20200828-yoshino/sbm3.jpg" alt="1階の立ち飲み屋さん"></p><p>2階の供用スペース<br><img src="/images/20200828-yoshino/sbm1.jpg" alt="2階の供用スペース"></p><p>3階の居住スペース<br><img src="/images/20200828-yoshino/sbm2.jpg" alt="3階の居住スペース1"><br><img src="/images/20200828-yoshino/sbm4.jpg" alt="3階の居住スペース2"></p><br><p>2階、3階は元々ホステルとして使われていたので、とても綺麗ですね！</p><p>ここが0円シェアハウス。。。信じられない。</p><p>一旦どんな謎があるんでしょうか？？？</p><h2 id="なんで0円なの？"><a href="#なんで0円なの？" class="headerlink" title="なんで0円なの？"></a>なんで0円なの？</h2><p>ズバリ、週に一回、一階の立ち飲み屋の手伝いをすることが条件です！</p><br><p>コロナ禍の影響で、飲食店はどこも経営的に厳しい状況です。</p><p>そんな中でスタッフの給与を支払うのはかなりの負担。</p><p>その上2,3階のホステルは、インバウンドの激減により、宿泊者も少ない状況。</p><p>そんな時にオーナーさんが考えたのが、この仕組みというわけですね。</p><p>2,3階は家賃無料（管理費だけ月額5000円かかります）にして、<br>その住民で立ち飲み屋を運営していっています。</p><h2 id="どんな住民が住んでるの？"><a href="#どんな住民が住んでるの？" class="headerlink" title="どんな住民が住んでるの？"></a>どんな住民が住んでるの？</h2><p>ここからはシェアハウスの住民を軽く紹介していきます！</p><h3 id="吉野"><a href="#吉野" class="headerlink" title="吉野"></a>吉野</h3><p>まずは私吉野ですね。</p><p><img src="/members/index/yoshino.png" alt="吉野"></p><p>Fusicでエンジニア/チームリーダーをしています。</p><p>入居理由は</p><ul><li>コミュニティとして面白そうだった（住み込みで働くってやってみたかった）</li><li>立ち飲み屋で全く知らない人と話すのが楽しかった</li></ul><h3 id="シュラフ石田"><a href="#シュラフ石田" class="headerlink" title="シュラフ石田"></a>シュラフ石田</h3><img src="/images/20200828-yoshino/ishida.jpg" width="300"><p>シュラフ石田という名前でYoutube動画をUPしつづけている人です。</p><p>「今晩泊めてください」と書かれたスケッチブックを持って、日本中や台湾、ベトナムなど、いろんな人の家を泊まり歩く旅をしています。</p><p>海外のいろんな話が聞けて、面白い人です。</p><h3 id="山P"><a href="#山P" class="headerlink" title="山P"></a>山P</h3><img src="/images/20200828-yoshino/yamap.jpg" width="300"><p>大牟田出身で現在フリーターの山Pです。</p><p>STAND BY MEと別で警固のバーでも働いてます。</p><p>自らWebサービス業をはじめて、恋愛コンサルなんかもやってるそう。</p><p>バイタリティ溢れる山Pです！</p><p>その他にもユニークな住民がたくさんいます。</p><p>エストニアで起業した人や、なんでも挑戦する大学生などなど</p><p>みんな立ち飲み屋のスタッフでもあるので、是非遊びにきてください〜！</p><h2 id="シェアハウスに入居するには？"><a href="#シェアハウスに入居するには？" class="headerlink" title="シェアハウスに入居するには？"></a>シェアハウスに入居するには？</h2><p>ここのシェアハウス、0円というだけあって、入居には面接と立ち飲み屋での体験入店が必要になります。</p><p>0円だから住む、という形ではなく、</p><ul><li>STAND BY MEという立ち飲み屋を盛り上げたい</li><li>立ち飲み屋で福岡の繋がりを増やしていきたい</li></ul><p>など、スタッフとしてお店をうまく活用してくれるようなメンバーを募集しているらしいです！</p><h2 id="終わりに"><a href="#終わりに" class="headerlink" title="終わりに"></a>終わりに</h2><p>最後まで読んでいただき、ありがとうございました！</p><p>立ち飲み屋に遊びに来てもらうのも、入居希望のも大歓迎ですので、興味あればお気軽に吉野まで！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、吉野です。&lt;/p&gt;
&lt;p&gt;2020年7月からシェアハウスに入居しました。&lt;/p&gt;
&lt;p&gt;なんと家賃0円の0円シェアハウス。&lt;/p&gt;
&lt;p&gt;その全貌をご紹介します！&lt;/p&gt;
&lt;br&gt;


&lt;h2 id=&quot;目次&quot;&gt;&lt;a href=&quot;#目次&quot; class=&quot;heade
      
    
    </summary>
    
    
      <category term="Yoshino" scheme="https://light.fusic.co.jp/categories/Yoshino/"/>
    
    
      <category term="雑記" scheme="https://light.fusic.co.jp/tags/%E9%9B%91%E8%A8%98/"/>
    
      <category term="シェアハウス" scheme="https://light.fusic.co.jp/tags/%E3%82%B7%E3%82%A7%E3%82%A2%E3%83%8F%E3%82%A6%E3%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>TDDBC Online 参加レポート</title>
    <link href="https://light.fusic.co.jp/2020/08/12/20200812-kondo/"/>
    <id>https://light.fusic.co.jp/2020/08/12/20200812-kondo/</id>
    <published>2020-08-12T04:30:38.000Z</published>
    <updated>2020-09-09T01:47:23.360Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは、近藤です！</p><p>去る 8月1日(土) 、TDDBC Online #1 に @choc-lucy で参加させていただきました。<br>遅ればせながら、イベントレポートを残しておきます！</p><h2 id="TDDBC-とは"><a href="#TDDBC-とは" class="headerlink" title="TDDBC とは"></a>TDDBC とは</h2><blockquote><p>TDD Boot Camp(TDDBC) とは、テスト駆動開発(Test Driven Development)について、座学だけでなく、実習形式で手を動かして体得することを目的とするイベントです。<br>これまで10年以上に渡り、日本各地でそれぞれの地域のコミュニティにより運営されてきました。<br>( <a href="http://devtesting.jp/tddbc/" target="_blank" rel="noopener">http://devtesting.jp/tddbc/</a> )</p></blockquote><p>イベントページは<a href="https://peatix.com/event/1545209" target="_blank" rel="noopener">こちら</a></p><h2 id="準備日"><a href="#準備日" class="headerlink" title="準備日"></a>準備日</h2><p>今回 TDDBC 初のオンライン開催ということで、事前準備を開催2週間前に行いました。</p><h3 id="やったこと"><a href="#やったこと" class="headerlink" title="やったこと"></a>やったこと</h3><ul><li><p>Discord のインストール &amp; サーバーへの参加</p></li><li><p>リモートペアプロデモ</p><ul><li>TA のお二方による、Java を用いたリモートペアプロ&amp;TDDデモ</li><li>チャットでは他のTAさんが質問に答えてくれていました</li><li>これだけで本番かのような満足感がありました。録画しておきたかった！</li></ul></li><li><p>言語ごとのペア決め</p><ul><li>PHP は4人参加だったので、2ペアにわかれました</li></ul></li><li><p>ペアごとに環境構築</p><ul><li>今回は VSCode の LiveShare 機能を使ってコード共有しました</li></ul></li></ul><p>etc…</p><h2 id="当日"><a href="#当日" class="headerlink" title="当日"></a>当日</h2><h3 id="twada-さんによる基調講演"><a href="#twada-さんによる基調講演" class="headerlink" title="twada さんによる基調講演"></a>twada さんによる基調講演</h3><p>配信のアーカイブは<a href="https://www.youtube.com/watch?v=Q-FJ3XmFlT8" target="_blank" rel="noopener">こちら</a>にあります。<br>TODOリスト作成時のタスク分解の鮮やかさ、初見だと震え上がります。<br>チャット欄の質疑応答も勉強になるので<strong>最低2周</strong>は必聴です！</p><p>個人的に印象に残っていることは以下の通り。</p><ul><li><p>TODOリストからタスクを選ぶ基準は「重要かつテスト容易性が高い」もの</p><ul><li>重要なものほどテスト容易性が低い、というのは思い込み！</li></ul></li><li><p>仮実装(=「ひどい茶番」)を経由することで、テストコードのテストを片付ける</p></li><li><p>リファクタリングは辞め時も大事</p><ul><li>サイクルを回すたびにチャンスはくるので、1度に時間をかけすぎないほうがいい</li></ul></li><li><p><a href="http://xunitpatterns.com/Assertion%20Roulette.html" target="_blank" rel="noopener">Assertion Roulette</a>にしない</p><ul><li>ただし、「HTTPステータスが200でそのメッセージはこれで…」のような複数組み合わせが全て成立して意味を成すものなら、複数のAssertionが存在しても良い</li></ul></li></ul><h3 id="ペアプロ-amp-TDD実践"><a href="#ペアプロ-amp-TDD実践" class="headerlink" title="ペアプロ&amp;TDD実践"></a>ペアプロ&amp;TDD実践</h3><p>初めてのペアプロ、初めてのTDD……<br>結論をいえば、ものすごく楽しかったです！</p><p>お題はこちらの<a href="https://gist.github.com/twada/75fb219c8cc180e9de166d8a58e877b0" target="_blank" rel="noopener">閉空間</a>でした。</p><h4 id="1-ペアプロ-amp-TDD"><a href="#1-ペアプロ-amp-TDD" class="headerlink" title="1. ペアプロ &amp; TDD"></a>1. ペアプロ &amp; TDD</h4><hr><p>始めはペアの方と2人して「ナビゲーター」をしている状態だったのが、<br>交代を経るごとに互いの役割を意識してコーディングできるようになりました！<br>うっかり2人で沼に向かっていったとき、TAさんが助言をくれていたのも、スムーズに進められた要因かなと思います。</p><p>おもしろかったポイント</p><ul><li><p>問題文からTODOリストへ落とし込むタスク分解が難しい</p><ul><li>なかなか「テスト容易性が高い」といえるレベルまで分解できなかった</li><li>ある程度で見切りをつけ、分解できなかったものはまた後で考えましょう、としたのは良かった</li><li>後半になるにつれ、タスク分解力が向上していった</li></ul></li><li><p>ペア2人で議論を重ねて合意した設計だったが、仮実装の段階で方針転換した</p><ul><li>基調講演で「TDDでは設計をし続ける」と言われていたのが実感できました</li></ul></li></ul><h4 id="2-レビュー"><a href="#2-レビュー" class="headerlink" title="2. レビュー"></a>2. レビュー</h4><hr><p>中間レビュー2回と最終レビューの計3回、レビューの機会が設けられていました。<br>この時間にTAさんからのフィードバックをもらったり、他ペアのコードを見たり、そのコードについて議論したりしました。</p><p>おもしろかったポイント</p><ul><li><p>他ペアの思考を知れた</p><ul><li>画面共有して、実際のコードとTODOリストを見せてもらいながら、その思考を説明し合いました</li><li>「getterのテストをあえて書かなかった」というあるチームの一言で、そもそもテスト対象として考えていなかったことに気づいたり</li></ul></li><li><p>他言語ペアのコードを見られた</p><ul><li>PHPチームは Ruby, Java チームのコードを見られましたが、言語仕様による設計の違いが出ていておもしろかったです</li></ul></li></ul><h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><p>ペアプロもTDDも、言葉として知っていても、懐疑的に構えていた節がありました。<br>実践した今となっては「すみませんでした！！！」と言いたいです。<br>設計力は上がるし、品質も向上するし、仕様が1人に留まらないし、いい事だらけです。</p><p>ペアプロを1度経験した人間はハマるという言論を何度か見かけましたが、まさにその通り。<strong>ハマりました</strong>。</p><p>仕事のほうは案件状況的に「今からペアプロしましょう」なんて感じではないので、プライベートでの実践を目論んでいます。<br>TDDは1人で勝手にやっています。たのしー！<br>ここから輪を広げていけたら最高ですね。がんばります！</p><p>以上、近藤によるイベント参加レポートでした！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは、近藤です！&lt;/p&gt;
&lt;p&gt;去る 8月1日(土) 、TDDBC Online #1 に @choc-lucy で参加させていただきました。&lt;br&gt;遅ればせながら、イベントレポートを残しておきます！&lt;/p&gt;
&lt;h2 id=&quot;TDDBC-とは&quot;&gt;&lt;a href=&quot;#T
      
    
    </summary>
    
    
      <category term="Kondo" scheme="https://light.fusic.co.jp/categories/Kondo/"/>
    
    
      <category term="イベントレポート" scheme="https://light.fusic.co.jp/tags/%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%83%AC%E3%83%9D%E3%83%BC%E3%83%88/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 142.Linked List Cycle II を解いてみる</title>
    <link href="https://light.fusic.co.jp/2020/07/23/1/"/>
    <id>https://light.fusic.co.jp/2020/07/23/1/</id>
    <published>2020-07-23T11:42:08.000Z</published>
    <updated>2020-09-09T01:47:23.358Z</updated>
    
    <content type="html"><![CDATA[<p>今回は、笹平が担当です。</p><p>LeetCodeというアルゴリズムが学べるサービスがあるので、その中の問題の一つを解いてみました。<br>ちなみに、linked listとは日本語で連結リストと呼ばれ、要素同士がそれぞれリンク情報をもっており、繋がっています。</p><h2 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h2><p><a href="https://leetcode.com/problems/linked-list-cycle-ii/" target="_blank" rel="noopener">https://leetcode.com/problems/linked-list-cycle-ii/</a></p><img src="/2020/07/23/1/question.png" class=""><h3 id="日本語訳"><a href="#日本語訳" class="headerlink" title="日本語訳"></a>日本語訳</h3><p>リンクされたリストが与えられた場合、サイクルが始まるノードを返します。サイクルがない場合はnullを返します。</p><p>与えられたリンクリスト内のサイクルを表現するには、リンクリスト内の末尾が接続する位置（インデックス0）を表す整数posを使用します。posが-1の場合、リンク先リストにはサイクルはありません。</p><img src="/2020/07/23/1/figure1.png" class=""><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * type ListNode struct &#123;</span></span><br><span class="line"><span class="comment"> *     Val int</span></span><br><span class="line"><span class="comment"> *     Next *ListNode</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">detectCycle</span><span class="params">(head *ListNode)</span> *<span class="title">ListNode</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> head == <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    slow := head</span><br><span class="line">    fast := head</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> fast.Next == <span class="literal">nil</span> || fast.Next.Next == <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line">        slow = slow.Next</span><br><span class="line">        fast = fast.Next.Next</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> slow == fast &#123;</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    slow = head</span><br><span class="line">    <span class="keyword">for</span> slow != fast &#123;</span><br><span class="line">        slow = slow.Next</span><br><span class="line">        fast = fast.Next</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> slow</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>簡単にコードの説明をします。</p><p>サイクルがあるかないかの判定に、リストを移動する二つの点を作ります。（ここではslow, fastという変数を用います）<br>名前の通りslowは遅く、fastは速く(slowの2倍の速度で)移動します。<br>もし、このfastがslowに追いついたらサイクルがあるということが言えます。</p><img src="/2020/07/23/1/figure2.png" class=""><p>Aをスタート、Bをサイクルのはじまり、Cを二つの点が重なる地点としています。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">slow: x+y</span><br><span class="line">fast: x+y+z+y</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2(x+y) &#x3D; x+y+z+y # fastはslowの2倍</span><br><span class="line">2x+2y &#x3D; x+2y+z</span><br><span class="line">x&#x3D;z</span><br></pre></td></tr></table></figure><p>つまり、xとzは同じ距離になることが分かります。<br>これを踏まえると、A,Cからスタートして、2つの点がぶつかるところがサイクルのスタートということになります。<br>簡単に説明しましたが、今回の記事はこれで以上です。</p><p>次の投稿もお楽しみに！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今回は、笹平が担当です。&lt;/p&gt;
&lt;p&gt;LeetCodeというアルゴリズムが学べるサービスがあるので、その中の問題の一つを解いてみました。&lt;br&gt;ちなみに、linked listとは日本語で連結リストと呼ばれ、要素同士がそれぞれリンク情報をもっており、繋がっています。&lt;/p
      
    
    </summary>
    
    
      <category term="Sasahira" scheme="https://light.fusic.co.jp/categories/Sasahira/"/>
    
    
      <category term="LeetCode" scheme="https://light.fusic.co.jp/tags/LeetCode/"/>
    
      <category term="Golang" scheme="https://light.fusic.co.jp/tags/Golang/"/>
    
  </entry>
  
</feed>
